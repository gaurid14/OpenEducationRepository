# Generated by Django 5.2.5 on 2025-10-05 06:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(max_length=20)),
                ('course_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_number', models.IntegerField()),
                ('chapter_name', models.CharField(max_length=200)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='accounts.course')),
            ],
            options={
                'unique_together': {('course', 'chapter_number')},
            },
        ),
        migrations.CreateModel(
            name='CourseOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome_code', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcomes', to='accounts.course')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='accounts.department'),
        ),
        migrations.CreateModel(
            name='OutcomeChapterMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcome_mappings', to='accounts.chapter')),
                ('outcome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_mappings', to='accounts.courseoutcome')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='accounts.program'),
        ),
        migrations.AddField(
            model_name='course',
            name='scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='accounts.scheme'),
        ),
        migrations.CreateModel(
            name='UploadCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('evaluation_status', models.BooleanField(default=False)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploads', to='accounts.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='ReleasedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('release_status', models.BooleanField(default=False)),
                ('upload', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='released_content', to='accounts.uploadcheck')),
            ],
        ),
        migrations.CreateModel(
            name='ContentScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter1', models.FloatField(blank=True, null=True)),
                ('parameter2', models.FloatField(blank=True, null=True)),
                ('parameter3', models.FloatField(blank=True, null=True)),
                ('upload', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content_score', to='accounts.uploadcheck')),
            ],
        ),
        migrations.CreateModel(
            name='ContentCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.BooleanField(default=False)),
                ('video', models.BooleanField(default=False)),
                ('assessment', models.BooleanField(default=False)),
                ('upload', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content_check', to='accounts.uploadcheck')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('CONTRIBUTOR', 'Contributor')], default='STUDENT', max_length=50)),
                ('college_name', models.CharField(blank=True, max_length=200, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('course', models.CharField(blank=True, choices=[('IT', 'IT'), ('CS', 'CS'), ('MECH', 'MECH'), ('EXTC', 'EXTC')], max_length=100, null=True)),
                ('year', models.CharField(blank=True, choices=[('1', 'FE'), ('2', 'SE'), ('3', 'TE'), ('4', 'BE')], max_length=50, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('years_of_experience', models.IntegerField(blank=True, null=True)),
                ('domain_of_expertise', models.CharField(blank=True, max_length=100, null=True)),
                ('current_institution', models.CharField(blank=True, max_length=200, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permission_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='uploadcheck',
            name='contributor',
            field=models.ForeignKey(limit_choices_to={'role': 'CONTRIBUTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='uploads', to='accounts.user'),
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('scheme', 'course_code')},
        ),
        migrations.CreateModel(
            name='EnrolledCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrolled_students', to='accounts.course')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'STUDENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='accounts.user')),
            ],
            options={
                'unique_together': {('student', 'course')},
            },
        ),
    ]
